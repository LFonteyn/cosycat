* TO DO list:
** Backend
*** TODO Systematic logging
*** DONE Refactoring for production
*** DONE Route notifications
Depending on whether the notification requires user response or not 
and whether the user is online or not: store notification in user
profile for later use (eventually emailing)

*** Blacklab
**** TODO kill current query on incoming query (possible?)
**** TODO Lock searcher while loading index
*** Sessions
**** TODO on-memory? on-db? sessions with up-to-date user settings
#+BEGIN_SRC clojure
{:username "user"
 :roles #{::admin ::user}               ;roles are now project-dependent
 :avatar "/avatars/user_1231231.jpg"
 :last-connected 17682345678
 :session {:notifications
           {:mode :debug
            :projects #{:periphrastical-passive
                        :clefts}}}}
#+END_SRC

** DB

*** DONE Project routes
Projects will help organizing annotations:

- assigning roles to users
- sort annotations, queries, history by project
- switch on/off annotations based on project

*** DONE Split annotation db in two collections
+ From corpus position to annotations (alias "cpos-ann")
#+BEGIN_SRC json
[
    {
	"_id": 51,
	"anns": [
	    {
		"key": "pos",
		"ann-id": 1
	    },
	    {
		"key": "NE",
		"ann-id": 10013
	    },
	    {
		"key": "rel",
		"ann-id": 2
	    }
	]
    },
    {
	"_id": 52,
	"anns": [
	    {
		"key": "rel",
		"ann-id": 2
	    }
	]
    }
]
#+END_SRC
+ Annotations (alias "anns")
#+BEGIN_SRC json
[
    {
	"_id": 1,
	"ann": {
	    "key": "pos",
	    "value": "NP"
	},
	"span": {
	    "type": "simple",
	    "scope": 51
	},
	"username": "user",
	"timestamp": 1457363525053,
	"history": [
	    {
		"ann": {
		    "key": "pos",
		    "value": "NPP"
		},
		"username": "user",
		"timestamp": 1457363515053
	    }
	]
    },
    {
	"_id": 2,
	"ann": {
	    "key": "rel",
	    "value": "NP"
	},
	"span": {
	    "type": "IOB",
	    "scope": {
		"B": 51,
		"O": 52
	    }
	},
	"timestamp": 12345678,
	"username": "user"
    }
]
#+END_SRC
*** Bulk inserts (does this work atomically in MongoDB?)
**** DONE Bulk of token annotations doesn't need to be atomic
If a single update fails, just notify the client.
**** TODO Span annotations always touch multiple documents (from B to O)
In that case, we should try ~$isolated~:
See [[https://docs.mongodb.org/manual/core/write-operations-atomicity/][atomicity]] and [[https://docs.mongodb.org/manual/reference/operator/update/isolated/#up._S_isolated][$isolated operator]].

Following the schema below, we shouldn't be worried about doing different updates
across documents, because the IOB annotation is always the same value for all tokens.
Except for history?

#+BEGIN_SRC json
{
    "ann": {
	"key": "entity",
	"value": "organization",
	"IOB": {
	    "B": 2018,
	    "O": 2021
	}
    },
    "timestamp": 12345678,
    "username": "user",
    "history": [
	{
	    "ann": {
		"key": "entity",
		"value": "organization"
	    },
	    "timestamp": 12345678,
	    "username": "user"   
	}
    ]
}
#+END_SRC

*** Notifications
**** TODO Filter notifications according to stored profiles
Different notification profiles: 
- Debug mode (get all)
- Project mode (only project-related notifications)
- Followee relationships (get notified about followees actions)
- Don't disturb modus (get only obligatory notifications 
  but don't show them on top; store them in Updates)

*** TODO Annotation categories database
**** Schemes

- Simple
#+BEGIN_SRC json
{
    "pos": [
	"NN",
	"NNP",
	"PP"
    ],
    "animate": [
	"human",
	"non-human",
	"animal",
	"inanimate"
    ]
}
#+END_SRC

- Or more complex, which of course implies more complex annotation schemes (including tag metadata)
#+BEGIN_SRC json
[
    {
	"key": "pos",
	"systems": [
	    {
		"name": "default Tagset",
		"source": "inline",
		"tags": [
		    "NN",
		    "NNP",
		    "PP"
		]
	    },
	    {
		"name": "STTS",
		"source": "http://www.ims.uni-stuttgart.de/forschung/ressourcen/lexika/TagSets/stts-table.html"	
	    }
	]
    }
]
#+END_SRC

** Front end

*** Edit panel

**** TODO On edit attempt display notification suggesting init edit process

**** TODO Init edit process directly by clicking on the annotation

*** Navbar
**** DONE Add Back to query button

*** Front page

**** TODO Assign roles to users

**** DONE Create/select project
- projects are needed in order to structure roles

**** DONE Rename query page to project/project-name
restrict access to project page depending on role

*** Annotation page

**** DONE Add filters (switcher for users) and sorters (for annotations)
**** DONE Retrieve textual context
**** TODO? Group annotation by colors
*** Query page
**** TODO Warn/skip greedy quantifiers
**** DONE Query on button click
**** DONE update incoming annotation for a token not in the target hit (in case it also appears)
*** Home page
**** TODO Show connection status
*** WS
**** DONE Reconnect on error
*** DB
**** TODO Store user profile settings
**** DONE Force Update of marked hits after new query? Or just remove marked hits after new query
**** Store user query history? or working with different queries simultaneously

